{"name":"Funshapes","tagline":"Editor 2D graphical  objects <C++/Qt5>","body":"FunShapes\r\n=========\r\nEditor 2D graphical  objects / Редактор графических 2D объектов\r\n\r\n![screenshot](https://github.com/JohnMcLaren/FunShapes/blob/master/funshapes_screenshot.png)\r\n\r\n####Description\r\n\r\nThe **editor** is written on C ++ using cross-platform **Qt5**. It can serve as a template for novice programmers using Qt to create their own programs using 2D graphics. In the program code can be found examples:\r\n\r\n1.\tClass [**QSignalMapper**] as switch  events / signals arising in the program\r\n2.\tWriting to file, read from file [**QFile, QFileDialog, QTextStream**]\r\n3.\tCreating your own context menu [**QMenu**]\r\n4.\tImplementation mechanism undo / redo actions made by the user (**Undo/Redo**). He can also be used to automation software - as record/playback macros, animation etc.\r\n5.\tTransformation of a graphic view of the scene / objects (scale, rotation) [**QTransform**]\r\n6.\tWorking with View of Scene [**QGraphicsView**] coordinate transformation (mapFrom…)\r\n7.\tDrawing with [**QPainterPath**]\r\n8.\tOverriding the paint () method of the object to control the process of drawing (use gradient fill, \"highlighting\", the definition of the order of drawing intersecting objects, control the scale drawing) [**QPainter**]\r\n9.\tConvert binary data to Base64 and back [**QString, QByteArray**]\r\n10.\tSelecting multiple objects with the mouse [**Rubber Band Region**]\r\n\r\nThe **editor** allows you to create and edit embedded types of objects, such as:\r\n\r\n1.\tTriangle\r\n2.\tRectangle\r\n3.\tCircle\r\n4.\tText\r\n5.\tImage\r\n\r\n**Objects** might change the following parameters:\r\n\r\n1.\tPosition\r\n2.\tGeometry(for objects \"Image\"/\"Text\", image/text scaled for object area)\r\n3.\tOrientation (angle on the Z axis)\r\n4.\tColor (except object \"Image\")\r\n5.\tEmbedded text of object as well as the font, size and color of this text (except \"Text\" object)\r\n\r\n**Scene** supports clipboard operations (**Cut / Copy / Paste**), and has a mechanism of undo / redo changes for objects (**Undo / Redo**). The state of the scene with objects and all their parameters (including images of objects \"Image\") can be saved to a file. Scene's file is a simple text file where the scene, objects and their parameters are described in the **XML** format.\r\n![arch](https://raw.githubusercontent.com/JohnMcLaren/FunShapes/master/etc/1.png)","google":"UA-58686535-1","note":"Don't delete this file! It's used internally to help with page regeneration."}